const iconReset=document.getElementById("reset-svg"),t=document.getElementById("plaintext"),m=document.getElementById("method"),r=document.getElementById("result");function showNotif(t){const e=document.createElement("div");e.textContent=t,Object.assign(e.style,{position:"fixed",top:"-40px",left:"50%",transform:"translateX(-50%)",background:"var(--accent)",color:"#fff",padding:"0.6rem 1.2rem",fontSize:"0.9rem",borderRadius:"6px",boxShadow:"0 4px 10px rgba(0,0,0,0.2)",transition:"all 0.4s ease, opacity 0.4s ease",opacity:"0.9",zIndex:"9999"}),document.body.appendChild(e),requestAnimationFrame((()=>{e.style.top="20px"})),setTimeout((()=>{e.style.top="-40px",e.style.opacity="0",setTimeout((()=>{e.remove()}),400)}),2500)}function copy(){if(r.value)try{navigator.clipboard.writeText(r.value),showNotif("âš¡Copy")}catch(t){showNotif("ðŸ”¥Error")}}m.addEventListener("change",(async()=>{await hash(t.value,m.value)}));let typingTimer,rotasi=1;async function hash(t,e){if(!t||!e)return void(r.value="");const n={"SHA-256":async function(t){const e=await crypto.subtle.digest("SHA-256",t);return Array.from(new Uint8Array(e)).map((t=>t.toString(16).padStart(2,"0"))).join("")},"SHA-384":async function(t){const e=await crypto.subtle.digest("SHA-384",t);return[...new Uint8Array(e)].map((t=>t.toString(16).padStart(2,"0"))).join("")},"SHA-512":async function(t){const e=await crypto.subtle.digest("SHA-512",t);return[...new Uint8Array(e)].map((t=>t.toString(16).padStart(2,"0"))).join("")},"SHA-1":async function(t){const e=await crypto.subtle.digest("SHA-1",t);return Array.from(new Uint8Array(e)).map((t=>t.toString(16).padStart(2,"0"))).join("")},"FNV-1a":function(t){let e=2166136261;for(let n=0;n<t.length;n++)e^=t.charCodeAt(n),e=16777619*e>>>0;return("0000000"+e.toString(16)).slice(-8)},DJB2:function(t){let e=5381;for(let n=0;n<t.length;n++)e=(e<<5)+e+t.charCodeAt(n);return(e>>>0).toString(16)},SDBM:function(t){let e=0;for(let n=0;n<t.length;n++)e=t.charCodeAt(n)+(e<<6)+(e<<16)-e;return(e>>>0).toString(16)},XOR:function(t){let e=0;for(let n=0;n<t.length;n++)e^=t.charCodeAt(n)<<n%8;return(e>>>0).toString(16)}};if(n[e])try{if(e.startsWith("SHA")){const a=(new TextEncoder).encode(t);return void(r.value=await n[e](a))}r.value=await n[e](t)}catch(t){alert("Error on hashing")}else alert("Metode hasing not valid!")}document.getElementById("resetBtn").addEventListener("click",(()=>{(t.value||r.value)&&requestAnimationFrame((()=>{t.value="",m.value="SHA-256",r.value="",iconReset.style.transform=`rotate(-${360*rotasi}deg)`,rotasi++}))})),t.addEventListener("input",(()=>{clearTimeout(typingTimer),typingTimer=setTimeout((()=>{hash(t.value,m.value)}),500)}));